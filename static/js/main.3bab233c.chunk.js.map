{"version":3,"sources":["utilities/useLocalStorage.js","utilities/fetchRecipes.js","Components/Navigation.js","Components/RecipeCard.js","Components/RecipeArea.js","Components/NutritionLabel.js","Components/RecipePage.js","Components/ScrollIntoView.js","App.js","serviceWorker.js","index.js"],"names":["useLocalStorage","key","initialValue","useState","item","window","localStorage","getItem","JSON","parse","error","console","log","storedValue","setStoredValue","value","valueToStore","Function","setItem","stringify","search","params","a","API_URL","URL","Object","keys","forEach","searchParams","append","fetch","response","json","data","fetchRecipes","Navigation","props","searchTerm","setSearchTerm","Navbar","bg","Brand","href","className","Form","inline","FormControl","type","placeholder","onChange","e","target","Button","variant","onClick","event","preventDefault","setLoading","from","to","then","setRecipeData","hits","setMoreResults","more","setCurrentSearchTerm","setSearchRange","RecipeCard","recipe","Card","style","width","selectRecipe","Img","src","image","Body","Title","label","RecipeArea","loadingMore","setLoadingMore","setSelectedRecipe","history","push","recipeData","loading","Container","id","Row","map","hit","Col","xs","sm","md","lg","uri","moreResults","start","searchRange","end","currentSearchTerm","concat","NutritionLabel","nutrients","totalNutrients","daily","totalDaily","ENERC_KCAL","FAT","FASAT","FATRN","CHOCDF","FIBTG","SUGAR","PROCNT","CHOLE","NA","CA","K","FE","THIA","NIA","VITB6A","VITD","yield","Math","ceil","totalWeight","calories","quantity","unit","round","RecipePage","fluid","Image","rounded","source","ingredientLines","ingredient","i","open","url","ScrollIntoView","children","location","prevLocation","useRef","useEffect","current","pathname","scrollTo","propTypes","PropTypes","node","object","withRouter","App","selectedRecipe","clear","path","exact","render","Boolean","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.3bab233c.chunk.js","sourcesContent":["import { useState } from 'react';\n\n// Hook\n\nfunction useLocalStorage(key, initialValue) {\n\n    // State to store our value\n  \n    // Pass initial state function to useState so logic is only executed once\n  \n    const [storedValue, setStoredValue] = useState(() => {\n  \n      try {\n  \n        // Get from local storage by key\n  \n        const item = window.localStorage.getItem(key);\n  \n        // Parse stored json or if none return initialValue\n  \n        return item ? JSON.parse(item) : initialValue;\n  \n      } catch (error) {\n  \n        // If error also return initialValue\n  \n        console.log(error);\n  \n        return initialValue;\n  \n      }\n  \n    });\n  \n  \n  \n    // Return a wrapped version of useState's setter function that ...\n  \n    // ... persists the new value to localStorage.\n  \n    const setValue = value => {\n  \n      try {\n  \n        // Allow value to be a function so we have same API as useState\n  \n        const valueToStore =\n  \n          value instanceof Function ? value(storedValue) : value;\n  \n        // Save state\n  \n        setStoredValue(valueToStore);\n  \n        // Save to local storage\n  \n        window.localStorage.setItem(key, JSON.stringify(valueToStore));\n  \n      } catch (error) {\n  \n        // A more advanced implementation would handle the error case\n  \n        console.log(error);\n  \n      }\n  \n    };\n  \n  \n  \n    return [storedValue, setValue];\n  \n  }\n\n  export default useLocalStorage;","\n/**\n * \n * @param search search term\n * @param {*} params optional search parameters\n */\nasync function fetchRecipes(search, params) {\n    const APP_ID = '8bc1f06b';\n    const APP_KEY = 'da27e21f002589523c5103081c712b4c';\n    const API_URL = new URL(`https://api.edamam.com/search?q=${search}&app_id=${APP_ID}&app_key=${APP_KEY}`);\n\n    if(params)\n        Object.keys(params).forEach(key => API_URL.searchParams.append(key, params[key]));\n\n    let response = await fetch(API_URL);\n    let data = await response.json();\n    return data;\n}\n\nexport default fetchRecipes;","import { Navbar, Button, Form, FormControl } from \"react-bootstrap\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport fetchRecipes from \"../utilities/fetchRecipes.js\";\n\nfunction Navigation(props) {\n  const [searchTerm, setSearchTerm] = useState();\n\n  const search = event => {\n    event.preventDefault();\n    if(searchTerm) {\n        props.setLoading(true);\n        fetchRecipes(searchTerm, {from:0, to:24})\n            .then(data => {\n                props.setRecipeData(data.hits)\n                props.setLoading(false);\n                props.setMoreResults(data.more);\n                props.setCurrentSearchTerm(searchTerm);\n                props.setSearchRange([0,24]);\n            });\n    }\n  };\n\n  return (\n    <Navbar bg=\"light\">\n      <Navbar.Brand href=\"#\" className=\"d-none d-sm-block mr-auto\">\n        Recipe Finder\n      </Navbar.Brand>\n      <Form inline>\n        <FormControl\n          type=\"text\"\n          placeholder=\"Search\"\n          className=\"mr-sm-2\"\n          value={searchTerm || \"\"}\n          onChange={e => setSearchTerm(e.target.value)}\n        ></FormControl>\n        <Button type=\"submit\" variant=\"outline-success\" onClick={search}>\n          Search\n        </Button>\n      </Form>\n    </Navbar>\n  );\n}\n\nexport default Navigation;\n","import React from \"react\";\nimport { Card } from \"react-bootstrap\";\n\nfunction RecipeCard(props) {\n\n  const recipe = props.recipe;\n\n  return (\n    <Card style={{ width: \"250px\" }} onClick={() => props.selectRecipe(recipe)}>\n      <Card.Img variant=\"top\" src={recipe.image} />\n      <Card.Body className=\"d-flex justify-content-center align-items-center\">\n        <Card.Title>{recipe.label}</Card.Title>\n      </Card.Body>\n    </Card>\n  );\n}\n\nexport default RecipeCard;\n","import React from \"react\";\nimport RecipeCard from \"./RecipeCard\";\nimport { useState } from \"react\";\nimport { Container, Col, Row, Button } from \"react-bootstrap\";\nimport fetchRecipes from \"../utilities/fetchRecipes.js\";\n\nfunction RecipeArea(props) {\n\n  const [loadingMore, setLoadingMore] = useState(false);\n\n  const selectRecipe = recipe => {\n    props.setSelectedRecipe(recipe);\n    props.history.push(\"/recipe\");\n  };\n\n  const loadMoreResults = () => {\n    // Bump the searchRange indexes up  by 25\n    const start = props.searchRange[0] + 25;\n    const end = props.searchRange[1] + 25;\n    props.setSearchRange([start, end]);\n\n    // Set loading more results flag... turn it off once we receive results from API\n    setLoadingMore(true);\n    \n    // Make the API call. Add the new recipes to recipe list state.\n    fetchRecipes(props.currentSearchTerm, {\n      from: start,\n      to: end\n    }).then(data => {\n      props.setRecipeData(props.recipeData.concat(data.hits));\n      props.setMoreResults(data.more);  // Are there more results beyond the current search range?\n      setLoadingMore(false);\n    });\n  };\n\n  if (props.recipeData && !props.loading) {\n    return (\n      <Container id=\"recipe-container\">\n        <Row>\n          {props.recipeData.map(hit => {\n            const recipe = hit.recipe;\n            return (\n              <Col\n                xs={12}\n                sm={6}\n                md={4}\n                lg={3}\n                className=\"d-flex justify-content-center mt-4\"\n                key={recipe.uri}\n              >\n                <RecipeCard recipe={recipe} selectRecipe={selectRecipe} />\n              </Col>\n            );\n          })}\n        </Row>\n        {props.moreResults && (\n          <Row>\n            <Col className=\"d-flex justify-content-center my-5\">\n              {loadingMore ? (\n                <i className=\"fas fa-cog fa-spin fa-2x\"></i>\n              ) : (\n                <Button onClick={loadMoreResults} variant=\"outline-primary\">\n                  Load more recipes...\n                </Button>\n              )}\n            </Col>\n          </Row>\n        )}\n      </Container>\n    );\n  } else {\n    return (\n      <div id=\"status-text-box\">\n        {props.loading ? (\n          <i className=\"fas fa-cog fa-spin fa-5x\"></i>\n        ) : (\n          <h1>Use the search to find a recipe!</h1>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default RecipeArea;\n","import React from \"react\";\n\nfunction NutritionLabel(props) {\n  const recipe = props.recipe;\n  const nutrients = recipe.totalNutrients;\n  const daily = recipe.totalDaily;\n\n  // Check if all nutrients were returned. If not we can use this to just\n  // not display the nutrients label.\n  const displayNutrients =\n    nutrients.ENERC_KCAL &&\n    nutrients.FAT &&\n    nutrients.FASAT &&\n    nutrients.FATRN &&\n    nutrients.CHOCDF &&\n    nutrients.FIBTG &&\n    nutrients.SUGAR &&\n    nutrients.PROCNT &&\n    nutrients.CHOLE &&\n    nutrients.NA &&\n    nutrients.CA &&\n    nutrients.K &&\n    nutrients.FE &&\n    nutrients.THIA &&\n    nutrients.NIA &&\n    nutrients.VITB6A &&\n    nutrients.VITD;\n\n  if (displayNutrients) {\n    return (\n      <section className=\"nutrition-label vertical-label\">\n        <div className=\"nutrition-row\">\n          <div className=\"nutrition-column\">\n            <header className=\"nutrition-header\">\n              <h1 className=\"nutrition-facts border-b\">Nutrition Facts</h1>\n              <div className=\"nutrition-row\">\n                <div className=\"nutrition-column\">\n                  <div className=\"servings\">{recipe.yield} servings</div>\n                  <div className=\"text-md text-bold show-tablet\">\n                    Serving size\n                  </div>\n                </div>\n              </div>\n              <div className=\"nutrition-row border-b-lg border-b-tablet\">\n                <div className=\"nutrition-column hide-tablet\">\n                  <div className=\"text-md text-bold\">Serving size</div>\n                </div>\n                <div className=\"nutrition-column\">\n                  <div className=\"text-md text-bold text-right text-left-tablet\">\n                    {Math.ceil(recipe.totalWeight / recipe.yield)}g\n                  </div>\n                </div>\n              </div>\n              <div className=\"nutrition-row border-b-md border-b-none-tablet\">\n                <div className=\"nutrition-column text-bold\">\n                  <div className=\"text-sm hide-tablet\">Amount per serving</div>\n                  <div className=\"calories\">Calories</div>\n                  <div className=\"text-sm show-tablet\">per serving</div>\n                </div>\n                <div className=\"nutrition-column calories amount align-bottom text-right\">\n                  {Math.ceil(recipe.calories / recipe.yield)}\n                </div>\n              </div>\n            </header>\n          </div>\n          <div className=\"nutrition-column\">\n            <div className=\"nutrition-row\">\n              <div className=\"nutrition-column\">\n                <div className=\"nutrition-row border-b border-b-md-tablet\">\n                  <div className=\"nutrition-column text-bold text-sm show-tablet\">\n                    Amount/serving\n                  </div>\n                  <div className=\"nutrition-column text-right text-bold text-sm\">\n                    % Daily Value *\n                  </div>\n                </div>\n                <div className=\"nutrition-row border-b\">\n                  <div className=\"nutrition-column\">\n                    <span className=\"text-bold\">\n                      Total Fat{\" \"}\n                      {Math.ceil(nutrients.FAT.quantity / recipe.yield)}\n                      {nutrients.FAT.unit}\n                    </span>\n                  </div>\n                  <div className=\"nutrition-column text-bold text-right\">\n                    {Math.ceil(daily.FAT.quantity / recipe.yield)}\n                    {daily.FAT.unit}\n                  </div>\n                </div>\n                <div className=\"nutrition-row border-b\">\n                  <div className=\"nutrition-column\">\n                    <span className=\"text-indent\">\n                      Saturated Fat{\" \"}\n                      {Math.ceil(nutrients.FASAT.quantity / recipe.yield)}\n                      {nutrients.FASAT.unit}\n                    </span>\n                  </div>\n                  <div className=\"nutrition-column text-bold text-right\">\n                    {Math.ceil(daily.FASAT.quantity / recipe.yield)}\n                    {daily.FASAT.unit}\n                  </div>\n                </div>\n                <div className=\"nutrition-row border-b\">\n                  <div className=\"nutrition-column\">\n                    <span className=\"text-indent\">\n                      <i>Trans</i> Fat{\" \"}\n                      {Math.ceil(nutrients.FATRN.quantity / recipe.yield)}\n                      {nutrients.FATRN.unit}\n                    </span>\n                  </div>\n                  <div className=\"nutrition-column text-bold text-right\"></div>\n                </div>\n                <div className=\"nutrition-row border-b\">\n                  <div className=\"nutrition-column\">\n                    <span className=\"text-bold\">\n                      Cholesterol{\" \"}\n                      {Math.ceil(nutrients.CHOLE.quantity / recipe.yield)}\n                      {nutrients.CHOLE.unit}\n                    </span>\n                  </div>\n                  <div className=\"nutrition-column text-bold text-right\">\n                    {Math.ceil(daily.CHOLE.quantity / recipe.yield)}\n                    {daily.CHOLE.unit}\n                  </div>\n                </div>\n                <div className=\"nutrition-row border-b border-b-md-tablet\">\n                  <div className=\"nutrition-column\">\n                    <span className=\"text-bold\">\n                      Sodium {Math.ceil(nutrients.NA.quantity / recipe.yield)}\n                      {nutrients.NA.unit}\n                    </span>\n                  </div>\n                  <div className=\"nutrition-column text-bold text-right\">\n                    {Math.ceil(daily.NA.quantity / recipe.yield)}\n                    {daily.NA.unit}\n                  </div>\n                </div>\n              </div>\n              <div className=\"nutrition-column\">\n                <div className=\"nutrition-row border-b-md show-tablet\">\n                  <div className=\"nutrition-column text-bold text-sm\">\n                    Amount/serving\n                  </div>\n                  <div className=\"nutrition-column text-right text-bold text-sm\">\n                    % Daily Value *\n                  </div>\n                </div>\n                <div className=\"nutrition-row border-b\">\n                  <div className=\"nutrition-column\">\n                    <span className=\"text-bold\">\n                      Total Carbohydrate{\" \"}\n                      {Math.ceil(nutrients.CHOCDF.quantity / recipe.yield)}\n                      {nutrients.CHOCDF.unit}\n                    </span>\n                  </div>\n                  <div className=\"nutrition-column text-bold text-right\">\n                    {Math.ceil(daily.CHOCDF.quantity / recipe.yield)}\n                    {daily.CHOCDF.unit}\n                  </div>\n                </div>\n                <div className=\"nutrition-row border-b\">\n                  <div className=\"nutrition-column\">\n                    <span className=\"text-indent\">\n                      Dietary Fiber{\" \"}\n                      {Math.ceil(nutrients.FIBTG.quantity / recipe.yield)}\n                      {nutrients.FIBTG.unit}\n                    </span>\n                  </div>\n                  <div className=\"nutrition-column text-bold text-right\">\n                    {Math.ceil(daily.FIBTG.quantity / recipe.yield)}\n                    {daily.FIBTG.unit}\n                  </div>\n                </div>\n                <div className=\"nutrition-row\">\n                  <div className=\"nutrition-column\">\n                    <span className=\"text-indent\">\n                      Total Sugars{\" \"}\n                      {Math.ceil(nutrients.SUGAR.quantity / recipe.yield)}\n                      {nutrients.SUGAR.unit}\n                    </span>\n                  </div>\n                  <div className=\"nutrition-column text-bold text-right\"></div>\n                </div>\n                <div className=\"nutrition-row text-indent-md border-t-sm\">\n                  <div className=\"nutrition-column\">\n                    Includes 0g Added Sugars\n                  </div>\n                  <div className=\"nutrition-column text-bold text-right\">\n                    0%\n                  </div>\n                </div>\n                <div className=\"nutrition-row border-t-sm border-b-lg border-b-md-tablet\">\n                  <div className=\"nutrition-column\">\n                    <span className=\"text-bold\">\n                      Protein{\" \"}\n                      {Math.ceil(nutrients.PROCNT.quantity / recipe.yield)}\n                      {nutrients.PROCNT.unit}\n                    </span>\n                  </div>\n                  <div className=\"nutrition-column text-bold text-right\"></div>\n                </div>\n              </div>\n            </div>\n            <div className=\"nutrition-row\">\n              <div className=\"nutrition-column\">\n                Vitamin D {Math.ceil(nutrients.VITD.quantity / recipe.yield)}\n                {nutrients.VITD.unit}{\" \"}\n                {Math.ceil(daily.VITD.quantity / recipe.yield)}\n                {daily.VITD.unit} • Calcium{\" \"}\n                {Math.ceil(nutrients.CA.quantity / recipe.yield)}\n                {nutrients.CA.unit}{\" \"}\n                {Math.ceil(daily.CA.quantity / recipe.yield)}\n                {daily.CA.unit} • Iron{\" \"}\n                {Math.ceil(nutrients.FE.quantity / recipe.yield)}\n                {nutrients.FE.unit}{\" \"}\n                {Math.ceil(daily.FE.quantity / recipe.yield)}\n                {daily.FE.unit} • Potassium{\" \"}\n                {Math.ceil(nutrients.K.quantity / recipe.yield)}\n                {nutrients.K.unit} {Math.ceil(daily.K.quantity / recipe.yield)}\n                {daily.K.unit} • Thiamin{\" \"}\n                {Math.round((nutrients.THIA.quantity / recipe.yield) * 10) / 10}\n                {nutrients.THIA.unit}{\" \"}\n                {Math.ceil(daily.THIA.quantity / recipe.yield)}\n                {daily.THIA.unit} • Niacin{\" \"}\n                {Math.ceil(daily.NIA.quantity / recipe.yield)}\n                {daily.NIA.unit} • Vitamin B6{\" \"}\n                {Math.round((nutrients.VITB6A.quantity / recipe.yield) * 10) /\n                  10}\n                {nutrients.VITB6A.unit}{\" \"}\n                {Math.ceil(daily.VITB6A.quantity / recipe.yield)}\n                {daily.VITB6A.unit}\n              </div>\n            </div>\n          </div>\n          <div className=\"nutrition-column\">\n            <footer className=\"nutrition-footer\">\n              <div className=\"asteric\">*</div>\n              <div className=\"footnote\">\n                The % Daily Value (DV) tells you how much a nutrient in a\n                serving of food contributes to a daily diet. 2,000 calories a\n                day is used for general nutrition advice.\n              </div>\n            </footer>\n          </div>\n        </div>\n      </section>\n    );\n  } else {\n    return <div></div>;\n  }\n}\n\nexport default NutritionLabel;\n","import React from \"react\";\nimport {\n  Button,\n  Image,\n  Container,\n  Row,\n  Col\n} from \"react-bootstrap\";\nimport NutritionLabel from \"./NutritionLabel\";\nimport \"../nutrition-label.scss\";\n\nfunction RecipePage(props) {\n  const recipe = props.recipe;\n\n  return (\n    <div>\n      <Container fluid>\n        <Row>\n          <Col xs=\"auto\">\n            <Image src={recipe.image} rounded></Image>\n          </Col>\n          <Col className=\"d-flex flex-column justify-content-around\">\n            <Button\n              variant=\"outline-secondary\"\n              className=\"mt-2\"\n              style={{ width: \"100px\" }}\n              onClick={() => props.history.push(\"/\")}\n            >\n              {\"<< Back\"}\n            </Button>\n            <div>\n              <h1 className=\"recipe-label\">{recipe.label}</h1>\n              <p className=\"calorie-caption\">\n                {Math.ceil(recipe.calories / recipe.yield)} calories per serving (makes {recipe.yield} servings)\n              </p>\n            </div>\n            <p>\n              Recipe by <b>{recipe.source}</b>\n            </p>\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col xs={12} md={6}>\n            <h2>Ingredients</h2>\n            <ul>\n              {recipe.ingredientLines.map((ingredient, i) => (\n                <li key={i}>{ingredient}</li>\n              ))}\n            </ul>\n          </Col>\n          <Col xs={12} md={6}>\n            <h2>Recipe</h2>\n            <p>\n              This recipe was provided by <b>{recipe.source}</b>. Click on the\n              button below to view preparation instructions.\n            </p>\n            <Button\n              variant=\"info\"\n              onClick={() => window.open(recipe.url, \"_blank\")}\n            >\n              Preparation Instructions\n            </Button>\n          </Col>\n        </Row>\n        <Row className=\"mt-4\">\n          <Col>\n            <NutritionLabel recipe={recipe} />\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default RecipePage;\n","import { useEffect, useRef } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst ScrollIntoView = ({ children, location }) => {\n  const prevLocation = useRef();\n\n  useEffect(() => {\n    if (prevLocation.current !== location.pathname) {\n      window.scrollTo(0, 0);\n      prevLocation.current = location.pathname;\n    }\n  }, [location]);\n\n  return children;\n};\n\nScrollIntoView.propTypes = {\n  children: PropTypes.node,\n  location: PropTypes.object\n};\n\nexport default withRouter(ScrollIntoView);\n","import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport useLocalStorage from \"./utilities/useLocalStorage\";\nimport Navigation from \"./Components/Navigation\";\nimport RecipeArea from \"./Components/RecipeArea\";\nimport RecipePage from \"./Components/RecipePage\";\nimport ScrollIntoView from \"./Components/ScrollIntoView\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./App.css\";\n\nfunction App() {\n  const [recipeData, setRecipeData] = useLocalStorage(\"recipeData\");\n  const [selectedRecipe, setSelectedRecipe] = useLocalStorage(\"selectedRecipe\");\n  const [loading, setLoading] = useState(false);\n  const [moreResults, setMoreResults] = useLocalStorage(false);\n  const [currentSearchTerm, setCurrentSearchTerm] = useLocalStorage(\"currentSearchTerm\", \"\");\n  const [searchRange, setSearchRange] = useLocalStorage(\"searchRange\", [0, 24]);\n\n  // Clear local storage when the page is loaded fresh.\n  useEffect(() => {\n    localStorage.clear();\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <ScrollIntoView>\n          <Switch>\n            <Route\n              path=\"/\"\n              exact\n              render={props => (\n                <div>\n                  <Navigation\n                    {...props}\n                    setRecipeData={setRecipeData}\n                    setLoading={setLoading}\n                    setMoreResults={setMoreResults}\n                    setCurrentSearchTerm={setCurrentSearchTerm}\n                    setSearchRange={setSearchRange}\n                  />\n                  <RecipeArea\n                    {...props}\n                    recipeData={recipeData}\n                    loading={loading}\n                    moreResults={moreResults}\n                    currentSearchTerm={currentSearchTerm}\n                    searchRange={searchRange}\n                    setSearchRange={setSearchRange}\n                    setSelectedRecipe={setSelectedRecipe}\n                    setMoreResults={setMoreResults}\n                    setRecipeData={setRecipeData}\n                  />\n                </div>\n              )}\n            />\n\n            <Route\n              path=\"/recipe\"\n              render={props => (\n                <RecipePage {...props} recipe={selectedRecipe} />\n              )}\n            />\n          </Switch>\n        </ScrollIntoView>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}